<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.matariky.bizservice.assetitm.base.mapper.BasicBaseRfidPrintMapper">
    <sql id="baseQueryListSql"> SELECT
        t.id,t.task_name,t.task_time,t.print_type,t.device_id,t.goods_id,t.print_num,t.printed_num,t.unprint_num,t.epc_rule,t.is_lock_epc,t.epc_password,t.is_odcode,t.od_fixed_content,t.is_qrcode,t.qr_fixed_content,t.rfid_img,t.remark,t.create_time,t.update_time,t.delete_time,t.create_by,t.update_by,t.operator_org_code,t.operator_self_org_code
        FROM basic_base_rfidprint t WHERE t.delete_time = 0 </sql>
    <sql id="baseQueryCountSql"> SELECT count(1) FROM basic_base_rfidprint t WHERE t.delete_time = 0 </sql>
    <select id="getBasicBaseRfidprintAll"
        resultType="com.matariky.bizservice.assetitm.base.bean.BasicBaseRfidPrint"> select
        a.id,a.task_name,' Base platform' as
        project_name,a.task_time,a.device_id,a.goods_id,a.print_type,a.print_num,a.printed_num,a.unprint_num,d.rules_name
        as
        epc_rule,a.is_lock_epc,a.epc_password,a.is_odcode,a.od_fixed_content,a.is_qrcode,a.qr_fixed_content,a.rfid_img,a.remark,a.create_time,a.update_time,a.delete_time,a.create_by,a.update_by,a.operator_org_code,a.operator_self_org_code,b.goods_name,c.device_code
        as print_code,concat("打印机（",c.device_code,"）") as print_name ,
        u.real_name,a.print_status,IFNULL(a.is_lock,0) as is_lock from basic_base_rfidprint a left
        join basic_base_goods b on a.goods_id=b.id left join basic_base_device c on a.device_id=c.id
        left join basic_base_codingrules d on a.epc_rule=d.id and d.status = 1 left join user_user u
        on a.create_by = u.id
        <where> a.delete_time=0
            <if
                test="params.taskName!=null and params.taskName!=''  "> and a.task_name like
        concat('%',#{params.taskName},'%') </if>
            <if
                test="params.printType!=null and params.printType!='' "> and a.print_type
        =#{params.printType} </if>
            <if test="params.isPrint!=null and params.isPrint==0"> and
        a.print_status &lt; 2 </if>
            <if test="params.isPrint!=null  and params.isPrint==1"> and
        a.print_status =2 </if>
            <if test="params.deviceId!=null"> and (a.device_id
        =#{params.deviceId} or a.device_id is NUll) </if>
            <if
                test="params.operateDateStart!=null and params.operateDateStart!='' ">
                <!--  Starting time search  --> and
        DATE_FORMAT(FROM_UNIXTIME(a.create_time / 1000), '%Y-%m-%d %H:%i:%s') &gt;=
        #{params.operateDateStart}
            </if>
            <if
                test="params.operateDateEnd!=null and params.operateDateEnd!='' ">
                <!--  End time search  --> and
        DATE_FORMAT(FROM_UNIXTIME(a.create_time / 1000), '%Y-%m-%d %H:%i:%s') &lt;=
        #{params.operateDateEnd}
            </if>
        </where> order by a.create_time desc
    </select>
    <select id="getBasicBaseRfidprintAllCount" parameterType="Map" resultType="int"> select count(1)
        from basic_base_rfidprint where delete_time=0 </select>
    <insert id="createBasicBaseRfidprint"
        parameterType="com.matariky.bizservice.assetitm.base.bean.BasicBaseRfidPrint"> insert into
        basic_base_rfidprint(id,task_name,print_type,task_time,device_id,goods_id,print_num,printed_num,unprint_num,epc_rule,is_lock_epc,epc_password,is_odcode,od_fixed_content,is_qrcode,qr_fixed_content,rfid_img,print_status,is_lock,remark,create_time,update_time,delete_time,create_by,update_by,operator_org_code,operator_self_org_code,
        tenant_id)
        values(#{id},#{taskName},#{printType},#{taskTime},#{deviceId},#{goodsId},#{printNum},#{printedNum},#{unprintNum},#{epcRule},#{isLockEpc},#{epcPassword},#{isOdcode},#{odFixedContent},#{isQrcode},#{qrFixedContent},#{rfidImg},#{printStatus},#{isLock},#{remark},#{createTime},#{updateTime},#{deleteTime},#{createBy},#{updateBy},#{operatorOrgCode},#{operatorSelfOrgCode},
        #{tenantId}) </insert>
    <update id="updateBasicBaseRfidprint"
        parameterType="com.matariky.bizservice.assetitm.base.bean.BasicBaseRfidPrint"> update
        basic_base_rfidprint set
        task_name=#{taskName},task_time=#{taskTime},device_id=#{deviceId},goods_id=#{goodsId},print_num=#{printNum},printed_num=#{printedNum},unprint_num=#{unprintNum},epc_rule=#{epcRule},is_lock_epc=#{isLockEpc},epc_password=#{epcPassword},is_odcode=#{isOdcode},od_fixed_content=#{odFixedContent},is_qrcode=#{isQrcode},qr_fixed_content=#{qrFixedContent},rfid_img=#{rfidImg},remark=#{remark},create_time=#{createTime},update_time=#{updateTime},delete_time=#{deleteTime},create_by=#{createBy},update_by=#{updateBy},operator_org_code=#{operatorOrgCode},operator_self_org_code=#{operatorSelfOrgCode}
        where id = #{id} and delete_time=0 </update>
    <update id="updateBasicBaseRfidprintById"
        parameterType="com.matariky.bizservice.assetitm.base.bean.BasicBaseRfidPrint"> update
        basic_base_rfidprint set
        printed_num=#{printedNum},unprint_num=#{unprintNum},print_status=#{printStatus} where id =
        #{id} and delete_time=0 </update>
    <update id="delBasicBaseRfidprintById" parameterType="int"> update basic_base_rfidprint set
        delete_time=now() where id=#{value} </update>
    <select id="getBasicBaseRfidprintById" parameterType="java.lang.Long"
        resultType="com.matariky.bizservice.assetitm.base.bean.BasicBaseRfidPrint"> select
        a.id,a.task_name,a.print_type,a.task_time,a.device_id,a.goods_id,a.print_num,a.printed_num,a.unprint_num,d.rules_name
        as
        epc_rule,a.is_lock_epc,a.epc_password,a.is_odcode,a.od_fixed_content,a.is_qrcode,a.qr_fixed_content,a.rfid_img,a.remark,a.create_time,a.update_time,a.delete_time,a.create_by,a.update_by,a.operator_org_code,a.operator_self_org_code,a.tenant_id,b.goods_name,b.goods_code,concat("打印机（",c.device_code,"）")
        as print_name from basic_base_rfidprint a left join basic_base_goods b on a.goods_id=b.id
        left join basic_base_device c on a.device_id=c.id left join basic_base_codingrules d on
        a.epc_rule=d.id and d.status = 1 where a.id=#{value} and a.delete_time=0 </select>
    <select id="getBasicBaseRfidprintDACCount" parameterType="java.util.Map"
        resultType="java.lang.Long">
        <if test="params.strategyCode =='1'.toString()">
            <include refid="baseQueryCountSql" />
            <if
                test="params.selfOrgCode != null and params.selfOrgCode !=''"> and
        t.operator_self_org_code=#{params.selfOrgCode} </if>
            <if
                test="params.tenantId != null and params.tenantId !=''"> and t.tenant_id =
        #{params.tenantId} </if>
            <if
                test="params.sharingSelfOrgCodes != null and params.sharingSelfOrgCodes.size() >0">
        or t.operator_self_org_code in
                <foreach item="soc" collection="params.sharingSelfOrgCodes"
                    open="(" separator="," close=")"> #{soc} </foreach>
            </if>
            <if
                test="params.sharingOrgCodes != null  and params.sharingOrgCodes.size()>0  "> or
        t.operator_org_code in
                <foreach item="oc" collection="params.sharingOrgCodes" open="("
                    separator="," close=")"> #{oc} </foreach>
            </if>
        </if>
        <if
            test=" params.strategyCode =='0'.toString()">
            <include refid="baseQueryCountSql" />
            <if
                test="params.tenantId != null and params.tenantId !=''"> and t.tenant_id =
        #{params.tenantId} </if>
        </if>
        <if test=" params.strategyCode =='2'.toString()">
            <include refid="baseQueryCountSql" />
            <if
                test="params.orgCode != null and params.orgCode !=''"> and
        t.operator_org_code=#{params.orgCode} </if>
            <if
                test="params.tenantId != null and params.tenantId !=''"> and t.tenant_id =
        #{params.tenantId} </if>
            <if
                test="params.sharingSelfOrgCodes != null and params.sharingSelfOrgCodes.size() >0 ">
        or t.operator_self_org_code in
                <foreach item="soc" collection="params.sharingSelfOrgCodes"
                    open="(" separator="," close=")"> #{soc} </foreach>
            </if>
            <if
                test="params.sharingOrgCodes != null and params.sharingOrgCodes.size()>0"> or
        t.operator_org_code in
                <foreach item="oc" collection="params.sharingOrgCodes" open="("
                    separator="," close=")"> #{oc} </foreach>
            </if>
        </if>
        <if
            test=" params.strategyCode =='3'.toString()">
            <include refid="baseQueryCountSql" />
            <if
                test="params.orgCode != null and params.orgCode !=''"> and t.operator_org_code like
        concat(#{params.orgCode}, '%') </if>
            <if
                test="params.tenantId != null and params.tenantId !=''"> and t.tenant_id =
        #{params.tenantId} </if>
            <if
                test="params.sharingSelfOrgCodes != null and params.sharingSelfOrgCodes.size() >0">
        or t.operator_self_org_code in
                <foreach item="soc" collection="params.sharingSelfOrgCodes"
                    open="(" separator="," close=")"> #{soc} </foreach>
            </if>
            <if
                test="params.sharingOrgCodes != null and params.sharingOrgCodes.size()>0"> or
        t.operator_org_code in
                <foreach item="oc" collection="params.sharingOrgCodes" open="("
                    separator="," close=")"> #{oc} </foreach>
            </if>
        </if>
    </select>
    <select id="getBasicBaseRfidprintDAC" parameterType="java.util.Map"
        resultType="com.matariky.bizservice.assetitm.base.bean.BasicBaseRfidPrint">
        <if test="params.strategyCode =='1'.toString()">
            <include refid="baseQueryListSql" />
            <if
                test="params.selfOrgCode != null and params.selfOrgCode !=''"> and
        t.operator_self_org_code=#{params.selfOrgCode} </if>
            <if
                test="params.tenantId != null and params.tenantId !=''"> and t.tenant_id =
        #{params.tenantId} </if>
            <if
                test="params.sharingSelfOrgCodes !=null and params.sharingSelfOrgCodes.size()>0">
        union
                <include refid="baseQueryListSql" />
                <if
                    test="params.sharingSelfOrgCodes != null and params.sharingSelfOrgCodes.size()>0">
        and t.operator_self_org_code in
                    <foreach item="soc" collection="params.sharingSelfOrgCodes"
                        open="(" separator="," close=")"> #{soc} </foreach>
                </if>
                <if
                    test="params.tenantId != null and params.tenantId !=''"> and t.tenant_id =
        #{params.tenantId} </if>
            </if>
            <if
                test="params.sharingOrgCodes !=null and params.sharingOrgCodes.size()>0"> union
                <include
                    refid="baseQueryListSql" />
                <if
                    test="params.sharingOrgCodes != null and params.sharingOrgCodes.size()>0  "> and
        t.operator_org_code in
                    <foreach item="oc" collection="params.sharingOrgCodes" open="("
                        separator="," close=")"> #{oc} </foreach>
                </if>
                <if
                    test="params.tenantId != null and params.tenantId !=''"> and t.tenant_id =
        #{params.tenantId} </if>
            </if>
            <if
                test="params.orderField != null and params.orderField !=''"> order by
        #{params.orderField} </if>
            <if test="params.order != null and params.order !=''">
        #{params.order} </if>
        </if>
        <if test=" params.strategyCode =='0'.toString()">
            <include refid="baseQueryListSql" />
            <if
                test="params.tenantId != null and params.tenantId !=''"> and t.tenant_id =
        #{params.tenantId} </if>
            <if test="params.orderField != null and params.orderField !=''">
        order by #{params.orderField} </if>
            <if test="params.order != null and params.order !=''">
        #{params.order} </if>
        </if>
        <if test=" params.strategyCode =='2'.toString()">
            <include refid="baseQueryListSql" />
            <if
                test="params.orgCode != null and params.orgCode !=''"> and
        t.operator_org_code=#{params.orgCode} </if>
            <if
                test="params.tenantId != null and params.tenantId !=''"> and t.tenant_id =
        #{params.tenantId} </if>
            <if
                test="params.sharingSelfOrgCodes !=null and params.sharingSelfOrgCodes !=''"> union
                <include
                    refid="baseQueryListSql" />
                <if
                    test="params.sharingSelfOrgCodes != null and params.sharingSelfOrgCodes.size() >0 ">
        and t.operator_self_org_code in
                    <foreach item="soc" collection="params.sharingSelfOrgCodes"
                        open="(" separator="," close=")"> #{soc} </foreach>
                </if>
                <if
                    test="params.tenantId != null and params.tenantId !=''"> and t.tenant_id =
        #{params.tenantId} </if>
            </if>
            <if
                test="params.sharingOrgCodes !=null and params.sharingOrgCodes !=''"> union
                <include
                    refid="baseQueryListSql" />
                <if
                    test="params.sharingOrgCodes != null and params.sharingOrgCodes.size()>0"> and
        t.operator_org_code in
                    <foreach item="oc" collection="params.sharingOrgCodes" open="("
                        separator="," close=")"> #{oc} </foreach>
                </if>
                <if
                    test="params.tenantId != null and params.tenantId !=''"> and t.tenant_id =
        #{params.tenantId} </if>
            </if>
            <if
                test="params.orderField != null and params.orderField !=''"> order by
        #{params.orderField} </if>
            <if test="params.order != null and params.order !=''">
        #{params.order} </if>
        </if>
        <if test=" params.strategyCode =='3'.toString()">
            <include refid="baseQueryListSql" />
            <if
                test="params.orgCode != null and params.orgCode !=''"> and t.operator_org_code like
        concat(#{params.orgCode}, '%') </if>
            <if
                test="params.tenantId != null and params.tenantId !=''"> and t.tenant_id =
        #{params.tenantId} </if>
            <if
                test="params.sharingSelfOrgCodes !=null and params.sharingSelfOrgCodes !=''"> union
                <include
                    refid="baseQueryListSql" />
                <if
                    test="params.sharingSelfOrgCodes != null and params.sharingSelfOrgCodes.size() >0">
        and t.operator_self_org_code in
                    <foreach item="soc" collection="params.sharingSelfOrgCodes"
                        open="(" separator="," close=")"> #{soc} </foreach>
                </if>
                <if
                    test="params.tenantId != null and params.tenantId !=''"> and t.tenant_id =
        #{params.tenantId} </if>
            </if>
            <if
                test="params.sharingOrgCodes !=null and params.sharingOrgCodes !=''"> union
                <include
                    refid="baseQueryListSql" />
                <if
                    test="params.sharingOrgCodes != null and params.sharingOrgCodes.size()>0"> and
        t.operator_org_code in
                    <foreach item="oc" collection="params.sharingOrgCodes" open="("
                        separator="," close=")"> #{oc} </foreach>
                </if>
                <if
                    test="params.tenantId != null and params.tenantId !=''"> and t.tenant_id =
        #{params.tenantId} </if>
            </if>
            <if
                test="params.orderField != null and params.orderField !=''"> order by
        #{params.orderField} </if>
            <if test="params.order != null and params.order !=''">
        #{params.order} </if>
        </if>
        <if
            test="params.pageStart != null and params.pageSize != null  "> limit
        #{params.pageStart}, #{params.pageSize} </if>
    </select>
    <update id="printLock"> update basic_base_rfidprint set is_lock=1 and device_id=#{deviceId}
        where id=#{printId} </update>
    <update id="printUnlock"> update basic_base_rfidprint set is_lock=0 and device_id=null where
        id=#{value} </update>
    <select id="selectLock" parameterType="java.lang.Long" resultType="int"> select
        IFNULL(is_lock,0) as is_lock from basic_base_rfidprint where id=#{value} and delete_time=0 </select>
</mapper>