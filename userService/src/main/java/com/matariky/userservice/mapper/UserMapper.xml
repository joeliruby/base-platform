<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.matariky.userservice.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.matariky.userservice.bean.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 09 11:51:39 CST 2020.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="pazzword" property="pazzword" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="cell_phone" property="cellPhone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="login_time" property="loginTime" jdbcType="BIGINT" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="BIGINT" />
    <result column="login_count" property="loginCount" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
    <result column="is_active" property="isActive" jdbcType="BIT" />
    <result column="tenant_id" property="tenantId" jdbcType="VARCHAR" />
    <result column="organization_id" property="organizationId" jdbcType="BIGINT" />
    <result column="self_organization_code" property="selfOrganizationCode" jdbcType="VARCHAR" />
    <result column="department_organization_code" property="departmentOrganizationCode" jdbcType="VARCHAR" />
    <result column="delete_time" property="deleteTime" jdbcType="BIGINT" />
    <result column="gender" property="gender" jdbcType="BIT" />
    <result column="application_id" property="applicationId" jdbcType="BIGINT" />
    <result column="created_by" property="createdBy" jdbcType="BIGINT" />
    <result column="theme" property="theme" jdbcType="VARCHAR" />
    <result column="locale" property="locale" jdbcType="CHAR" />
    <result column="order_code" property="orderCode" jdbcType="VARCHAR" />
  </resultMap>
  
  
  
   <select id="searchByUserNamePrefix" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_user
    where tenant_id=#{tenantId} and real_name like concat(#{userNamePrefix}, '%')
  </select>
  
  
  <select id="getUserAllWithRoleAndGroup" parameterType="Map" resultType="java.util.Map">
        select 
        u.id,u.login_name as loginName,u.pazzword,u.real_name as realName,u.cell_phone as cellPhone,u.email,u.create_time as createTime,
        u.login_time as loginTime,u.last_login_time as lastLoginTime,u.login_count as loginCount,u.update_time as updateTime,u.is_active as isActive,
               u.tenant_id as tenantId,
        u.organization_id as organizationId,u.self_organization_code as selfOrganizationCode,u.department_organization_code as organizationCode,
               u.delete_time as deleteTime,
        u.gender,u.created_by as createdBy, u.order_code as orderCode, t.tenant_name AS tenantName ,
        group_concat(ur.role_name ) AS roleName ,
        org.organization_name AS organizationName,
        group_concat(ug.group_name ) AS groupName 
        from 
        	user_user u,
        	user_tenant t,
  			user_role ur,
			user_r_user_role urr,
			user_organization org,
			user_group ug,
			user_r_group_user urgu
        where 1=1 
        AND  u.delete_time=0
        AND  u.tenant_id = t.tenant_code
 		AND  u.id= urr.user_id
 		AND  urr.role_id =ur.id 
 		AND  u.organization_id=org.id
 		AND  u.id = urgu.user_id
 		AND  ug.id = urgu.group_id
        <if test="params.tenantId != null and params.tenantId !=''">
            AND  u.tenant_id= #{params.tenantId}
        </if>
        <if test="params.value !=null and params.value !=''">
            AND  u.${params.type} like '%${params.value}%'
        </if>
		<if test="params.gender != null and params.gender !=''">
            AND u.gender = #{params.gender}
        </if>
        <if test="params.is_active != null and params.is_active !=''">
            AND u.is_active  = #{params.is_active}
        </if>
        <if test="params.begin != null and params.begin !=''">
           AND u.create_time >= ${params.begin}
        </if>
        <if test="params.end !=null and params.end!=''">
        <![CDATA[  AND u.create_time <= ${params.end}   ]]>     
        </if>
        <if test="params.organizations != null">
           AND u.organization_id   in
		<foreach item="organizationId" index="index" collection="params.organizations" open="(" separator="," close=")">
            #{organizationId}
        </foreach>
        </if>
        GROUP BY u.id
  </select>
  
  <select id="getUserAllWithRoleAndGroupByIds" parameterType="Map" resultType="java.util.Map">
        select 
        u.id,u.login_name as loginName,u.pazzword,u.real_name as realName,u.cell_phone as cellPhone,u.email,u.create_time as createTime,
        u.login_time as loginTime,u.last_login_time as lastLoginTime,u.login_count as loginCount,u.update_time as updateTime,u.is_active as isActive,u.tenant_id as tenantId,
        u.organization_id as organizationId,u.self_organization_code as selfOrganizationCode,u.department_organization_code as organizationCode,u.delete_time as deleteTime,
        u.gender,u.created_by as createdBy, u.order_code as orderCode, t.tenant_name AS tenantName ,
        group_concat(ur.role_name ) AS roleName ,
        org.organization_name AS organizationName,
        group_concat(ug.group_name ) AS groupName 
        from 
        	user_user u,
        	user_tenant t,
  			user_role ur,
			user_r_user_role urr,
			user_organization org,
			user_group ug,
			user_r_group_user urgu
        where 1=1 
        AND  u.delete_time=0
        AND  u.tenant_id = t.tenant_code
 		AND  u.id= urr.user_id
 		AND  urr.role_id =ur.id 
 		AND  u.organization_id=org.id
 		AND  u.id = urgu.user_id
 		AND  ug.id = urgu.group_id
        AND u.id in
		 <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
        GROUP BY u.id
  </select>
  
  <select id="getUserAll" parameterType="Map" resultType="com.matariky.userservice.bean.User">
        select 
        u.id,u.login_name,u.pazzword,u.real_name,u.cell_phone,u.email,u.create_time,
        u.login_time,u.last_login_time,u.login_count,u.update_time,u.is_active,u.tenant_id,
        u.organization_id,u.self_organization_code,u.department_organization_code,u.delete_time,u.gender,u.created_by as createdBy,
        u.order_code,
        t.tenant_name AS tenantName,
        group_concat(ur.role_name ) AS roleName 
        from 
        	user_user u
		LEFT JOIN user_tenant t ON u.tenant_id = t.tenant_code
		LEFT JOIN user_r_user_role urr ON u.id = urr.user_id
		LEFT JOIN user_role ur ON urr.role_id = ur.id
        where 1=1 
        AND  u.delete_time=0
        <if test="params.tenantId != null and params.tenantId !=''">
            AND  u.tenant_id =#{params.tenantId}
        </if>
        <if test="params.value !=null and params.value !=''">
            AND  u.${params.type} like '%${params.value}%'
        </if>
		<if test="params.gender != null and params.gender !=''">
            AND u.gender = #{params.gender}
        </if>
        <if test="params.is_active != null and params.is_active !=''">
            AND u.is_active  = #{params.is_active}
        </if>
        <if test="params.begin != null and params.begin !=''">
           AND u.create_time >= ${params.begin}
        </if>
        <if test="params.end !=null and params.end!=''">
        <![CDATA[  AND u.create_time <= ${params.end}   ]]>     
        </if>
        <if test="params.organizations != null and params.organizations !=''">
           AND u.department_organization_code like '${params.organizations}%'
        </if>
        GROUP BY u.id
  </select>

  <select id="getUserAllCount" parameterType="Map" resultType="int">
        select count(1) from user_user 
        where 1=1 
        and  delete_time=0
        <if test="params.tenantId != null and params.tenantId !=''">
            and  tenant_id= #{params.tenantId}
        </if>
        <if test="params.value !=null and params.value !=''">
            and  ${params.type} like '%${params.value}%'
        </if>
		<if test="params.gender != null and params.gender !=''">
            and gender = #{params.gender}
        </if>
        <if test="params.is_active != null and params.is_active !=''">
            and is_active  = #{params.is_active}
        </if>
        <if test="params.begin != null and params.begin !=''">
            and create_time >= ${params.begin}
        </if>
        <if test="params.end !=null and params.end!=''">
        <![CDATA[ and  create_time <= ${params.end}   ]]>     
        </if>
        <if test="params.orderField != null and params.orderField !=''">
        order by  #{params.orderField}
        </if>
        <if test="params.order != null and params.order !=''">
         #{params.order}
        </if>
  </select>	
  
			  	<!-- select u.id,
				  u.login_name,
				  u.pazzword,
				  u.real_name,
				  u.cell_phone,
				  u.email,
				  u.create_time,
				  u.login_time,
				  u.last_login_time,
				  u.login_count,
				  u.update_time,
				  u.is_active,
				  u.tenant_id,
				  u.organization_id,
				  u.self_organization_code,
				  u.department_organization_code,
				  u.delete_time,
				  u.gender,
				  u.created_by AS createdBy ,
			  group_concat( DISTINCT org1.organization_name),
			  t.tenant_name AS tenantName,
			  GROUP_CONCAT( ur.role_name ) AS roleName
			  
			  from user_user u 
				join   user_organization org on org.organization_code like  concat('ind_%_', u.id) 
			    join user_organization org1 on org1.id=org.parent_id
				LEFT JOIN user_tenant t ON u.tenant_id = t.tenant_code
				LEFT JOIN user_r_user_role urr ON u.id = urr.user_id
				LEFT JOIN user_role ur ON urr.role_id = ur.id
			  group by u.id; -->
	
  <insert id="createUser" parameterType="com.matariky.userservice.bean.User">
        insert into user_user(id,login_name,pazzword,real_name,cell_phone,email,create_time,login_time,last_login_time,login_count,
                              update_time,is_active,tenant_id,organization_id,self_organization_code,department_organization_code,delete_time,
                              gender,created_by, locale,order_code)
        values(#{id},#{login_name},#{pazzword},#{real_name},#{cell_phone},#{email},#{create_time},#{login_time},#{last_login_time},
               #{login_count},#{update_time},#{is_active},#{tenant_id},#{organization_id},#{self_organization_code},#{department_organization_code},
               #{delete_time},#{gender}, #{created_by},#{locale},#{orderCode})
	</insert>
	
	<insert id="createUserAndTenantAndOrganization" parameterType="Map">
			INSERT INTO user_r_user_tenant (
					user_id,
					tenant_code,
					organization_id,
					organization_code,
					tenant_id,
					self_organization_code
			)
			VALUES
			(#{params.user_id},
			#{params.tenant_code},
			#{params.organization_id},
			#{params.organization_code},
			#{params.tenant_id},
			#{params.self_organization_code}
			)
	</insert>
	

	<update id="updateUser" parameterType="com.matariky.userservice.bean.User">
        update user_user 
        set id=#{params.id} 
		<if test="params.loginName != null ">
        	,login_name=#{params.loginName}
        </if>
			<if test="params.pazzword != null ">
			        	,pazzword=#{params.pazzword}
			        </if>
			<if test="params.realName != null ">
			        	,real_name=#{params.realName}
			        </if>
			<if test="params.cellPhone != null ">
			        	,cell_phone=#{params.cellPhone}
			        </if>
			<if test="params.email != null ">
			        	,email=#{params.email}
			        </if>
			<if test="params.createTime != null ">
			        	,create_time=#{params.createTime}
			        </if>
			<if test="params.loginTime != null ">
			        	,login_time=#{params.loginTime}
			        </if>
			<if test="params.lastLoginTime != null ">
			        	,last_login_time=#{params.lastLoginTime}
			        </if>
			<if test="params.loginCount != null ">
			        	,login_count=#{params.loginCount}
			        </if>
			<if test="params.updateTime != null ">
			        	,update_time=#{params.updateTime}
			        </if>
			<if test="params.isActive != null ">
			        	,is_active=#{params.isActive}
			        </if>
			<if test="params.tenantId != null ">
			        	,tenant_id=#{params.tenantId}
			        </if>
			<if test="params.organizationId != null ">
			        	,organization_id=#{params.organizationId}
			        </if>
			<if test="params.selfOrganizationCode != null ">
			        	,self_organization_code=#{params.selfOrganizationCode}
			        </if>
			<if test="params.departmentOrganizationCode != null ">
			        	,department_organization_code=#{params.departmentOrganizationCode}
			        </if>
			<if test="params.deleteTime != null ">
			        	,delete_time=#{params.deleteTime}
			        </if>
			<if test="params.gender != null ">
			        	,gender=#{params.gender}
			        </if>
			<if test="params.applicationId != null ">
			        	,application_id=#{params.applicationId}
			        </if>
			<if test="params.createdBy != null ">
			        	,created_by=#{params.createdBy}
			        </if>
			<if test="params.theme != null ">
			        	,theme=#{params.theme}
			        </if>
			<if test="params.orderCode != null ">
			        	,order_code=#{params.orderCode}
			        </if>
			<if test="params.locale != null ">
			        	,locale=#{params.locale}
			        </if>

        where id = #{params.id} and delete_time=0
	</update>

	<delete id="delUserById" parameterType="int">
        delete from user_user where id=#{value}
	</delete>

	<select id="getUserById"  parameterType="java.lang.Long" resultType="com.matariky.userservice.bean.User" >
        select id,login_name,pazzword,real_name,cell_phone,email,create_time,login_time,last_login_time,login_count,update_time,is_active,tenant_id,
               organization_id,self_organization_code,department_organization_code,delete_time,gender,created_by,order_code from user_user where id=#{value}
	</select>		
	
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 09 11:51:39 CST 2020.
    -->
    id, login_name, pazzword, real_name, cell_phone, email, create_time, login_time, 
    last_login_time, login_count, update_time, is_active, tenant_id, organization_id, 
    self_organization_code, department_organization_code, delete_time, gender, application_id,created_by,theme,locale,order_code
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 09 11:51:39 CST 2020.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 09 11:51:39 CST 2020.
    -->
    delete from user_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.matariky.userservice.bean.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 09 11:51:39 CST 2020.
    -->
    insert into user_user (id, login_name, pazzword, 
      real_name, cell_phone, email, 
      create_time, login_time, last_login_time, 
      login_count, update_time, is_active, 
      tenant_id, organization_id, self_organization_code, 
      department_organization_code, delete_time, 
      gender, application_id,created_by, locale,order_code)
    values (#{id,jdbcType=BIGINT}, #{loginName,jdbcType=VARCHAR}, #{pazzword,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{cellPhone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=BIGINT}, #{loginTime,jdbcType=BIGINT}, #{lastLoginTime,jdbcType=BIGINT}, 
      #{loginCount,jdbcType=INTEGER}, #{updateTime,jdbcType=BIGINT}, #{isActive,jdbcType=BIT}, 
      #{tenantId,jdbcType=VARCHAR}, #{organizationId,jdbcType=BIGINT}, #{selfOrganizationCode,jdbcType=VARCHAR}, 
      #{departmentOrganizationCode,jdbcType=VARCHAR}, #{deleteTime,jdbcType=BIGINT}, 
      #{gender,jdbcType=BIT}, #{applicationId,jdbcType=BIGINT}, #{createdBy,jdbcType=BIGINT}, #{locale,jdbcType=CHAR},
            #{orderCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.matariky.userservice.bean.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 09 11:51:39 CST 2020.
    -->
    insert into user_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="pazzword != null" >
        pazzword,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="cellPhone != null" >
        cell_phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="loginCount != null" >
        login_count,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="isActive != null" >
        is_active,
      </if>
      <if test="tenantId != null" >
        tenant_id,
      </if>
      <if test="organizationId != null" >
        organization_id,
      </if>
      <if test="selfOrganizationCode != null" >
        self_organization_code,
      </if>
      <if test="departmentOrganizationCode != null" >
        department_organization_code,
      </if>
      <if test="deleteTime != null" >
        delete_time,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="applicationId != null" >
        application_id,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="theme != null" >
        theme,
      </if>
      <if test="locale != null" >
        locale,
      </if>
      <if test="orderCode != null" >
        order_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="pazzword != null" >
        #{pazzword,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="cellPhone != null" >
        #{cellPhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=BIGINT},
      </if>
      <if test="loginCount != null" >
        #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="isActive != null" >
        #{isActive,jdbcType=BIT},
      </if>
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="organizationId != null" >
        #{organizationId,jdbcType=BIGINT},
      </if>
      <if test="selfOrganizationCode != null" >
        #{selfOrganizationCode,jdbcType=VARCHAR},
      </if>
      <if test="departmentOrganizationCode != null" >
        #{departmentOrganizationCode,jdbcType=VARCHAR},
      </if>
      <if test="deleteTime != null" >
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=BIT},
      </if>
      <if test="applicationId != null" >
        #{applicationId,jdbcType=BIGINT},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="theme != null" >
        #{theme,jdbcType=BIGINT},
      </if>
        <if test="orderCode != null" >
            #{orderCode,jdbcType=VARCHAR},
        </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.matariky.userservice.bean.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 09 11:51:39 CST 2020.
    -->
    update user_user
    <set >
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="pazzword != null" >
        pazzword = #{pazzword,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="cellPhone != null" >
        cell_phone = #{cellPhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=BIGINT},
      </if>
      <if test="loginCount != null" >
        login_count = #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="isActive != null" >
        is_active = #{isActive,jdbcType=BIT},
      </if>
      <if test="tenantId != null" >
        tenant_id = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="organizationId != null" >
        organization_id = #{organizationId,jdbcType=BIGINT},
      </if>
      <if test="selfOrganizationCode != null" >
        self_organization_code = #{selfOrganizationCode,jdbcType=VARCHAR},
      </if>
      <if test="departmentOrganizationCode != null" >
        department_organization_code = #{departmentOrganizationCode,jdbcType=VARCHAR},
      </if>
      <if test="deleteTime != null" >
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=BIT},
      </if>
      <if test="applicationId != null" >
        application_id = #{applicationId,jdbcType=BIGINT},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBY,jdbcType=BIGINT},
      </if>
      <if test="theme != null" >
        theme = #{theme,jdbcType=BIGINT},
      </if>
      <if test="locale != null" >
        locale = #{locale,jdbcType=CHAR},
      </if>
        <if test="orderCode != null" >
            order_code = #{orderCode,jdbcType=VARCHAR},
        </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.matariky.userservice.bean.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 09 11:51:39 CST 2020.
    -->
    update user_user
    set login_name = #{loginName,jdbcType=VARCHAR},
      pazzword = #{pazzword,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      cell_phone = #{cellPhone,jdbcType=VARCHAR}, 
      email = #{email,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      login_time = #{loginTime,jdbcType=BIGINT},
      last_login_time = #{lastLoginTime,jdbcType=BIGINT},
      login_count = #{loginCount,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=BIGINT},
      is_active = #{isActive,jdbcType=BIT},
      tenant_id = #{tenantId,jdbcType=VARCHAR},
      organization_id = #{organizationId,jdbcType=BIGINT},
      self_organization_code = #{selfOrganizationCode,jdbcType=VARCHAR},
      department_organization_code = #{departmentOrganizationCode,jdbcType=VARCHAR},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      gender = #{gender,jdbcType=BIT},
      application_id = #{applicationId,jdbcType=BIGINT},
      created_by = #{createdBy,jdbcType=BIGINT},
      theme = #{theme,jdbcType=VARCHAR},
      order_code = #{orderCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 03 09:36:16 CST 2020.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_user
    where login_name = #{loginName,jdbcType=VARCHAR} and delete_time=0
  </select>
  
  
  	<!--批量Delete  User 和组的中间表数据 -->
	<delete id="deleteGroupByUserIds" >
		DELETE FROM user_r_group_user WHERE user_id  in
		<foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
	</delete>
	
	
	<!--批量Delete  User 和租户和组织机构的中间表数据 -->
	<delete id="deleteTenantAndOrganizationByUserIds">
		DELETE FROM user_r_user_tenant WHERE user_id  in
		<foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
	</delete>
	
	
	<!--批量Delete  User 和角色的中间表数据 -->
	<delete id="deleteRoleByUserIds" >
		DELETE FROM user_r_user_role WHERE user_id  in
		 <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
	</delete>
	
	<!-- 向 User 和租户和组织机构的中间表插入数据 -->
	<insert id="saveTenantAndOrganization" parameterType="Map" >
            INSERT INTO user_r_user_tenant (user_id,tenant_code,organization_id,organization_code,tenant_id,self_organization_code)
                 values
                    (#{user_id},#{tenant_code},#{organization_id},#{organization_code},#{tenant_id},#{self_organization_code});
    </insert>
	
	
	<!-- 向 User 和组中间表插入数据 -->
	<insert id="saveRGroupUser" parameterType="java.lang.Long" >
            INSERT INTO user_r_group_user (group_id,user_id)
                 values
                    (#{groupId},#{userId});
    </insert>
    
    
    <!-- 向 User 和角色中间表插入数据 -->
	<insert id="saveRRoleUser" parameterType="java.lang.Long" >
            INSERT INTO user_r_user_role (role_id,user_id)
                 values
                    (#{roleId},#{userId});
    </insert>
    
    <select id="getRoleIdList" resultType="long">
    <!-- select role_id from user_user u,user_r_user_role r where r.user_id =  AND u.id=r.user_id AND u.delete_time=0 AND u.is_active=1 -->
        select role_id from user_r_user_role where user_id = #{value}
    </select>
    
    <select id="getGroupIdList" resultType="long">
    <!-- select group_id from user_user u,user_r_group_user g where  g.user_id =1 AND u.id=g.user_id AND u.delete_time=0 AND u.is_active=1 -->
        select group_id from user_r_group_user where user_id = #{value}
    </select>
    
    
    
    <update id="updateDeleteTimeById">
    	update user_user
    	<set >
        	delete_time = unix_timestamp()
    	</set>
    	where id in
    	 <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
  	</update>
  	
  
    <select id="getApplicationByUser"  resultType="java.util.LinkedHashMap"> 
    	SELECT t1.id,t1.application_name FROM user_application t1,user_r_user_application t2 WHERE t2.application_id=t1.id and t1.is_active=1 and t1.delete_time=0 AND t2.user_id=#{user_id,jdbcType=BIGINT} AND t2.tenant_id=#{tenant_id,jdbcType=VARCHAR}
  	</select>
  	
  	
  	<select id="getPermissionByUser"  resultType="com.matariky.userservice.bean.TreeModel">
    	SELECT
			p.id,
			p.parent_id AS pid,
			p.permission_name AS NAME 
		FROM
			user_user u,
			user_r_user_permission ur,
			user_permission p 
		WHERE
			u.id = ur.user_id 
		AND p.id = ur.permission_id 
		AND p.tenant_id = #{tenant_id,jdbcType=VARCHAR}
		AND p.application_id = #{application_id,jdbcType=BIGINT}
		AND p.is_active = 1 and p.delete_time=0
		AND u.id =#{user_id,jdbcType=BIGINT} and u.delete_time=0 and u.is_active=1		GROUP BY p.id
  	</select>
  	
  	
  	
  	<select id="getPermissionByUserAndRoleAndGroup"  resultType="com.matariky.userservice.bean.TreeModel">
    		SELECT
				p.id,
				p.parent_id AS pid,
				p.permission_name AS NAME 
			FROM
				user_user u,
				user_r_user_permission ur,
				user_permission p 
			WHERE
				u.id = ur.user_id 
			AND p.id = ur.permission_id 
			AND p.tenant_id = #{tenant_id,jdbcType=VARCHAR}
			AND p.application_id = #{application_id,jdbcType=BIGINT}
			AND p.is_active = 1 
			AND u.id = #{user_id,jdbcType=BIGINT} UNION
			SELECT
				p.id,
				p.parent_id AS pid,
				p.permission_name AS permissionName 
			FROM
				user_user u,
				user_r_user_role url1,
				user_role r,
				user_r_role_permission rp,
				user_permission p 
			WHERE
				u.id = url1.user_id 
			AND url1.role_id = r.id 
			AND r.id = rp.role_id 
			AND rp.permission_id = p.id 
			AND p.tenant_id = #{tenant_id,jdbcType=VARCHAR}
			AND p.application_id = #{application_id,jdbcType=BIGINT}
			AND p.is_active = 1 
			AND u.id = #{user_id,jdbcType=BIGINT} UNION
			SELECT
				p.id,
				p.parent_id AS pid,
				p.permission_name AS permissionName 
			FROM
				user_user u,
				user_r_group_user ug,
				user_group g,
				user_r_group_permission gp,
				user_permission p 
			WHERE
				u.id = ug.user_id 
			AND ug.group_id = g.id 
			AND g.id = gp.group_id 
			AND p.id = gp.permission_id 
			AND p.tenant_id = #{tenant_id,jdbcType=VARCHAR}
			AND p.application_id = #{application_id,jdbcType=BIGINT} 
			AND p.is_active = 1 
			AND u.id = #{user_id,jdbcType=BIGINT}
  	</select>
  	
  	<select id="getCountByOrganizationId"  resultType="int">
  	SELECT count(1) from user_user  WHERE  organization_id in
		 <foreach item="organizationId" collection="organizationIds" open="(" separator="," close=")">
            #{organizationId,jdbcType=BIGINT}
        </foreach>
        AND tenant_id =#{tenant_id,jdbcType=VARCHAR} 
        AND delete_time=0
  	</select> 
  	
  	<update id="updatePassword">
		update user_user set pazzword = #{newPassword} where id = #{userId}
	</update>
  
  
</mapper>