package com.matariky.userservice.mapper;

import java.io.Serializable;
import java.util.Collection;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;

import com.baomidou.mybatisplus.core.conditions.Wrapper;
import com.baomidou.mybatisplus.core.mapper.BaseMapper;
import com.baomidou.mybatisplus.core.toolkit.Constants;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;

import com.matariky.userservice.bean.Organization;

public interface OrganizationMapper extends BaseMapper<Organization>{
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_organization
     *
     * @mbggenerated Fri Nov 27 16:22:43 CST 2020
     */
    int deleteByPrimaryKey(Long id);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_organization
     *
     * @mbggenerated Fri Nov 27 16:22:43 CST 2020
     */
    int insertSelective(Organization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_organization
     *
     * @mbggenerated Fri Nov 27 16:22:43 CST 2020
     */
    Organization selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_organization
     *
     * @mbggenerated Fri Nov 27 16:22:43 CST 2020
     */
    int updateByPrimaryKeySelective(Organization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_organization
     *
     * @mbggenerated Fri Nov 27 16:22:43 CST 2020
     */
    int updateByPrimaryKey(Organization record);
    
    @Select("select group_concat(organization_code) as organization_code,group_concat(self_organization_code) as self_organization_code from user_r_user_tenant where user_id=#{userId} and tenant_Id=#{tenantId}   group by tenant_id")
	Map<String, String> getOrgIdByUserId(@Param("tenantId") String tenantId, @Param("userId") String userId);

    @Override
	int insert(Organization entity);


	@Override
    int deleteById(Serializable id);


	 @Override
    int deleteByMap(@Param(Constants.COLUMN_MAP) Map<String, Object> columnMap);


	 @Override
    int delete(@Param(Constants.WRAPPER) Wrapper<Organization> queryWrapper);

     @Override
    int deleteBatchIds(@Param(Constants.COLLECTION) Collection<? extends Serializable> idList);


	 @Override
    int updateById(@Param(Constants.ENTITY) Organization entity);


	 @Override
    int update(@Param(Constants.ENTITY) Organization entity, @Param(Constants.WRAPPER) Wrapper<Organization> updateWrapper);


	 @Override
    Organization selectById(Serializable id);


	 @Override
    List<Organization> selectBatchIds(@Param(Constants.COLLECTION) Collection<? extends Serializable> idList);


	 @Override
    List<Organization> selectByMap(@Param(Constants.COLUMN_MAP) Map<String, Object> columnMap);


	 @Override
    Organization selectOne(@Param(Constants.WRAPPER) Wrapper<Organization> queryWrapper);


	 @Override
    Long selectCount(@Param(Constants.WRAPPER) Wrapper<Organization> queryWrapper);


	 @Override
    List<Organization> selectList(@Param(Constants.WRAPPER) Wrapper<Organization> queryWrapper);


	@Override
    List<Map<String, Object>> selectMaps(@Param(Constants.WRAPPER) Wrapper<Organization> queryWrapper);


	 @Override
    List<Object> selectObjs(@Param(Constants.WRAPPER) Wrapper<Organization> queryWrapper);


    Page<Organization> selectPage(Page<Organization> page, @Param(Constants.WRAPPER) Wrapper<Organization> queryWrapper);

    Page<Map<String, Object>> selectMapsPage(Page<Organization> page, @Param(Constants.WRAPPER) Wrapper<Organization> queryWrapper);
}
