web.api.url=https://signoz.yxemi.com:444/
spring.http.encoding.charset = utf8
## Freemarker  Configuration 
#spring.freemarker.template-loader-path = classpath:/web/
#spring.freemarker.cache = false
#spring.freemarker.charset = UTF-8
#spring.freemarker.check-template-location = true
#spring.freemarker.content-type = text/html
#spring.freemarker.expose-request-attributes = true
#spring.freemarker.expose-session-attributes = true
#spring.freemarker.request-context-attribute = request
#spring.freemarker.suffix = .ftl

server.tomcat.uri-encoding = UTF-8
tomcat.util.http.parser.HttpParser.requestTargetAllow=\"<>[\\]^`{|}
# File 上传限制
spring.http.multipart.max-request-size=500MB
spring.http.multipart.max-file-size=500MB

# File 资源路径（默认为打包根路径下的file目录下）
#file.dir = D:\\kkFileview\\
#file.dir = ${KK_FILE_DIR:default}
#openoffice home路径
#office.home = C:\\Program Files (x86)\\OpenOffice 4
#office.home = ${KK_OFFICE_HOME:default}

#缓存实现类型  ,不配默认为内嵌RocksDB(type = default)实现  ,可 Configuration 为redis(type = redis)实现（需要 Configuration spring.redisson.address等参数）和 JDK 内置 Object 实现（type = jdk）,
#cache.type =  ${KK_CACHE_TYPE:jdk}
#redis连接  ,只有当cache.type = redis时才有用
#spring.redisson.address = ${KK_SPRING_REDISSON_ADDRESS:127.0.0.1:6379}
#spring.redisson.password = ${KK_SPRING_REDISSON_PASSWORD:123456}
#缓存是否 Automatic清理 true 为开启  ,注释掉或其他值都为 Close 
#cache.clean.enabled = ${KK_CACHE_CLEAN_ENABLED:true}
#缓存 Automatic清理时间  ,cache.clean.enabled = true时才有用  ,cron表达式  ,基于Quartz cron
#cache.clean.cron = ${KK_CACHE_CLEAN_CRON:0 0 3 * * ?}

#######################################可在运行时动态 Configuration #######################################
#提供预览 Service 的 Address   ,默认从 Request url读  ,如果使用nginx等反向代理  ,需要手动  Configuration
#base.url = https://file.keking.cn
#base.url = ${KK_BASE_URL:default}

#信任站点  ,多个用','隔开  ,  Configuration了之后  ,会限制只能预览 From 信任站点 Pagination 的 File   ,默认不限制
#trust.host = file.keking.cn,kkfileview.keking.cn
#trust.host = ${KK_TRUST_HOST:default}

#是否 Activate缓存
#cache.enabled = ${KK_CACHE_ENABLED:true}

# Text 类型  ,默认如下  ,可自定义 Add 
#simText = ${KK_SIMTEXT:txt,html,htm,asp,jsp,xml,json,properties,md,gitignore,log,java,py,c,cpp,sql,sh,bat,m,bas,prg,cmd}
#多媒体类型  ,默认如下  ,可自定义 Add 
#media = ${KK_MEDIA:mp3,wav,mp4,flv}
#office类型文档(word ppt)样式  ,默认为 Image (image)  ,可 Configuration 为pdf（预览时也有按钮切换）
#office.preview.type = ${KK_OFFICE_PREVIEW_TYPE:image}
#是否禁止下载转换生成的pdf File 
#pdf.download.disable = ${KK_PDF_DOWNLOAD_DISABLE:true}

#预览源为FTP时 FTP User  Name   ,可在ftp url后面加参数ftp.username=ftpuser指定  ,不指定默认用 Configuration 的
#ftp.username = ${KK_FTP_USERNAME:ftpuser}
#预览源为FTP时 FTP密码  ,可在ftp url后面加参数ftp.password=123456指定  ,不指定默认用 Configuration 的
#ftp.password = ${KK_FTP_PASSWORD:123456}
#预览源为FTP时, FTP连接默认ControlEncoding(根据FTP   Server   Operation System选择  ,Linux一般为UTF-8  ,Windows一般为GBK)  ,可在ftp url后面加参数ftp.control.encoding=UTF-8指定  ,不指定默认用 Configuration 的
#ftp.control.encoding = ${KK_FTP_CONTROL_ENCODING:UTF-8}

#水印  Content
#例：watermark.txt = ${WATERMARK_TXT:凯京科技内部 File   ,严禁外泄}
#如需取消水印  ,  Content  Configuration为空即可  ,例：watermark.txt = ${WATERMARK_TXT:}
#watermark.txt = ${WATERMARK_TXT:}
#水印x轴间隔
#watermark.x.space = ${WATERMARK_X_SPACE:10}
#水印y轴间隔
#watermark.y.space = ${WATERMARK_Y_SPACE:10}
#水印字体
#watermark.font = ${WATERMARK_FONT:微软雅黑}
#水印字体大小
#watermark.fontsize = ${WATERMARK_FONTSIZE:18px}
#水印字体颜色
#watermark.color = ${WATERMARK_COLOR:black}
#水印透明度  ,要求  Configuration在大于等于0.005  ,小于1
#watermark.alpha = ${WATERMARK_ALPHA:0.2}
#水印宽度
#watermark.width = ${WATERMARK_WIDTH:180}
#水印高度
#watermark.height = ${WATERMARK_HEIGHT:80}
#水印倾斜度数  ,要求  Configuration在大于等于0  ,小于90
#watermark.angle = ${WATERMARK_ANGLE:10}
#spring.profiles.active=dev
redis.password=af970b3691a0356b2a5acde1371e14cd9e5db3591564f0eb789c2324cc02362f
redis.port=7002
redis.host=172.28.1.13
redis.db=9


