<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.matariky.commonservice.base.mapper.BasicBaseGoodsMapper">


    <select id="selectFieldExtend" resultType="java.lang.String">
        SELECT  field_map  from   basic_base_form_config where  name ='物品表' and delete_time = 0  and tenant_id = #{tenantId};
    </select>


	<select id="getBasicBaseGoodsAll"  resultType="java.util.HashMap">
        SELECT
        g.id,
        g.goods_code,
        g.goods_name,
        g.goods_image,
        g.goods_describe,
        g.remark,
        g.create_time,
        g.update_time,
        g.delete_time,
        g.create_by,
        g.update_by,
        g.operator_org_code,
        g.operator_self_org_code,
        u.real_name ,
        e.id  extendId ,
        ( SELECT count( 1 ) FROM basic_base_rfidfactory bbr WHERE bbr.goods_id = g.id ) a,
        ( SELECT count( 1 ) FROM basic_base_createrfid_factory bbcf WHERE bbcf.goods_id = g.id AND bbcf.delete_time = 0 ) b,
        ( SELECT count( 1 ) FROM basic_base_createrfid_print bbcp WHERE bbcp.goods_id = g.id AND bbcp.delete_time = 0 ) c,
        ( SELECT count( 1 ) FROM basic_base_rfid_binding bbrb WHERE bbrb.goods_id = g.id AND bbrb.delete_time = 0 ) d,
        ( SELECT count( 1 ) FROM basic_base_rfidprint bbrp WHERE bbrp.goods_id = g.id AND bbrp.delete_time = 0 ) e
        <if test="params.extendFieldList != null and params.extendFieldList.size() > 0">
            <foreach collection="params.extendFieldList" item="field" open="," separator=",">
                IFNULL( ${field} , '' )  as ${field}
            </foreach>
        </if>
        from basic_base_goods g left join  user_user u on g.update_by = u.id
        left join   basic_base_form_extend e on e.business_id = g.id and e.delete_time = 0
        <where>
            g.delete_time=0
          <if test="params.goodsName!=null and params.goodsName!=''  ">
             and g.goods_name like concat('%',#{params.goodsName},'%')
          </if>
          <if test="params.goodsCode!=null and params.goodsCode!='' ">
             and g.goods_code like concat('%',#{params.goodsCode},'%')
          </if>
        </where>
        order by  g.create_time desc
	</select>

    <select id="getOptionList" resultType="com.matariky.commonservice.base.vo.GoodsOptionInfo">
        select id,goods_code,goods_name from  basic_base_goods where delete_time=0
    </select>

	<select id="getBasicBaseGoodsAllCount" parameterType="Map" resultType="int">
        select count(1) from basic_base_goods where delete_time=0
	</select>

	<insert id="createBasicBaseGoods" parameterType="com.matariky.commonservice.base.bean.BasicBaseGoods">
        insert into basic_base_goods(id,goods_code,goods_name,goods_image,goods_describe,remark,create_time,update_time,create_by,update_by,operator_org_code,operator_self_org_code,tenant_id)
        values(#{id},#{goodsCode},#{goodsName},#{goodsImage},#{goodsDescribe},#{remark},#{createTime},#{updateTime},#{createBy},#{updateBy},#{operatorOrgCode},#{operatorSelfOrgCode},#{tenantId})
	</insert>

	<update id="updateBasicBaseGoods" parameterType="com.matariky.commonservice.base.bean.BasicBaseGoods">
        update basic_base_goods
        set goods_code=#{goodsCode},goods_name=#{goodsName},goods_image=#{goodsImage},goods_describe=#{goodsDescribe},remark=#{remark},create_time=#{createTime},update_time=#{updateTime},delete_time=#{deleteTime},create_by=#{createBy},update_by=#{updateBy},operator_org_code=#{operatorOrgCode},operator_self_org_code=#{operatorSelfOrgCode}
        where id = #{id} and delete_time=0
	</update>

	<update id="delBasicBaseGoodsById" parameterType="java.lang.Long">
        update  basic_base_goods set delete_time=now() where id=#{value}
	</update>

	<select id="getBasicBaseGoodsById"  parameterType="java.lang.Long" resultType="com.matariky.commonservice.base.bean.BasicBaseGoods" >
        select id,goods_code,goods_name,goods_image,goods_describe,remark,create_time,update_time,delete_time,
               create_by,update_by,operator_org_code,operator_self_org_code from basic_base_goods where id= #{id} and delete_time=0
	</select>

    <select id="getGoodsCountFromRfidfactory" resultType="java.lang.Integer">
        SELECT
            count( 1 )
        FROM
            basic_base_rfidfactory
        WHERE
            goods_id = #{goodsId}
          and  delete_time = 0
    </select>


    <select id= "getGoodsCountFromRfidPrint" resultType="java.lang.Integer">
        select count(1) from  basic_base_rfidprint where goods_id = #{goodsId} and delete_time = 0
    </select>

</mapper>
